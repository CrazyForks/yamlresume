name: publish

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    uses: ./.github/workflows/test.yml
    with:
      tag: ${{ github.ref_name }}

  npm:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Publish packages
        run: pnpm publish:all
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker:
    needs: npm
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            yamlresume/yamlresume
            ghcr.io/${{ github.repository }}

      - name: Build and push docker images
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          load: true
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  github-release:
    needs: [npm, docker]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract changelog for release
        id: changelog
        if: github.ref_type == 'tag'
        run: |
          # Get version from tag (remove 'v' prefix)
          VERSION="${GITHUB_REF_NAME#v}"

          # Extract changelog content using our script
          bash ./scripts/extract-changelog.sh "$VERSION" release_notes.md

          # Output for debugging
          echo "üìù Release notes content:"
          cat release_notes.md

      - name: Create a github release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          append_body: true
          discussion_category_name: Announcements
          draft: false
          body_path: release_notes.md
          generate_release_notes: true

      - name: Clean up
        if: github.ref_type == 'tag'
        run: rm -f release_notes.md
